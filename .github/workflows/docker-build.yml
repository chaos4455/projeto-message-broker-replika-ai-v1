name: üê≥ Build & Push Multi-Service Docker Image - Replika AI

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: üîß Build, Optimize & Push Docker Image

    steps:
      - name: üì• Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: üõ†Ô∏è Gerar Dockerfile otimizado dinamicamente
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:22.04

          ENV DEBIAN_FRONTEND=noninteractive
          ENV TZ=Etc/UTC

          # --- Atualiza√ß√£o e instala√ß√£o enxuta ---
          RUN apt-get update && apt-get upgrade -y && \
              apt-get install -y --no-install-recommends \
              python3 python3-pip gcc build-essential \
              libpq-dev openssh-server sudo ufw \
              nano vim htop iftop net-tools curl wget unzip iputils-ping \
              libpam0g-dev libpam-modules ca-certificates tzdata && \
              apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*

          # --- Cria√ß√£o de usu√°rio seguro ---
          RUN useradd -m -s /bin/bash admin && echo 'admin:admin' | chpasswd && \
              echo 'admin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \
              mkdir /var/run/sshd

          # --- Configura√ß√£o de seguran√ßa do SSH ---
          RUN sed -i 's/^#\\?PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config && \
              sed -i 's/^#\\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config && \
              sed -i 's/^#\\?UsePAM.*/UsePAM yes/' /etc/ssh/sshd_config && \
              sed -i 's/^#\\?PermitEmptyPasswords.*/PermitEmptyPasswords no/' /etc/ssh/sshd_config

          # --- Exposi√ß√£o de portas ---
          EXPOSE 22 8000 8080 8333 8777

          # --- Defini√ß√£o do diret√≥rio do app ---
          WORKDIR /app
          COPY . /app

          # --- Instala√ß√£o das depend√™ncias Python ---
          RUN pip3 install --no-cache-dir -r requirements.txt || true

          # --- Inicializa√ß√£o dos scripts em sequ√™ncia ---
          CMD service ssh start && \
              python3 message-broker-v3-clean.py & \
              sleep 5 && \
              python3 webdash3-clean.py & \
              sleep 5 && \
              python3 geramensagem-v3-massive-loop.py & \
              sleep 5 && \
              python3 coleta-mensagem-v3-batch-lote.py && \
              tail -f /dev/null
          EOF

      - name: üîê Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: chaos4455
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üß± Build da imagem otimizada
        run: docker build -t chaos4455/message-broker-v3:latest .

      - name: ‚òÅÔ∏è Push da imagem para o Docker Hub
        run: docker push chaos4455/message-broker-v3:latest
