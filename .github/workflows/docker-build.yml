name: 🚀 Build & Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v4

    - name: 🔐 Login no Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 📝 Gerar Dockerfile dinamicamente
      run: |
        cat <<'EOF' > Dockerfile
        FROM ubuntu:22.04

        # --- Atualiza e instala dependências essenciais ---
        RUN apt-get update && apt-get install -y \
            python3 python3-pip \
            gcc libpq-dev build-essential \
            openssh-server sudo ufw \
            nano vim htop iftop net-tools curl wget unzip iputils-ping \
            libpam0g-dev libpam-modules && \
            apt-get clean

        # --- Configura usuário admin com senha admin ---
        RUN useradd -m -s /bin/bash admin && echo 'admin:admin' | chpasswd && echo 'admin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

        # --- Ativa SSH e configura diretório necessário ---
        RUN mkdir /var/run/sshd

        # --- Segurança básica (hardening) ---
        RUN sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config && \
            sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config && \
            sed -i 's/^#\?UsePAM.*/UsePAM yes/' /etc/ssh/sshd_config && \
            sed -i 's/^#\?PermitEmptyPasswords.*/PermitEmptyPasswords no/' /etc/ssh/sshd_config

        # --- UFW: libera as portas desejadas ---
        RUN ufw allow 22 && \
            ufw allow 8000 && \
            ufw allow 8080 && \
            ufw allow 8333 && \
            ufw allow 8777 && \
            ufw allow OpenSSH && \
            ufw --force enable

        # --- Define diretório do app ---
        WORKDIR /app

        # --- Copia arquivos do repositório ---
        COPY requirements.txt .
        COPY message-broker-v3-clean.py .

        # --- Instala pacotes Python necessários ---
        RUN pip3 install --no-cache-dir -r requirements.txt

        # --- Expõe as portas do serviço e SSH ---
        EXPOSE 22 8000 8080 8333 8777

        # --- Comando principal ---
        CMD service ssh start && python3 message-broker-v3-clean.py
        EOF

    - name: 🐳 Build da imagem Docker
      run: |
        docker build -t chaos4455/message-broker-v3:latest .

    - name: 🚀 Push da imagem pro Docker Hub
      run: |
        docker push chaos4455/message-broker-v3:latest
