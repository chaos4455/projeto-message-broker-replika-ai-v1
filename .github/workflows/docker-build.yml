name: üî® Build and Verify Docker Streamlit + SSH + Services App

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: chaos4455/message-broker-replika:latest
      DOCKER_CONTAINER_NAME: message-broker-replika
      EXTERNAL_SSH_PORT: 8222

    steps:
      - name: üìÖ Checkout do Reposit√≥rio
        uses: actions/checkout@v3

      - name: üîÑ Atualizando reposit√≥rio com pull
        run: git pull origin main || echo "‚ö†Ô∏è Aviso: git pull falhou"

      - name: üìÇ Preparando estrutura do build
        run: |
          rm -rf dockerbuild
          mkdir -p dockerbuild/app
          cp -r !(dockerbuild|.git|.github) dockerbuild/app || true

      - name: ‚úçÔ∏è Criando Dockerfile
        run: |
          cat <<EOF > dockerbuild/Dockerfile
          FROM ubuntu:22.04

          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update && apt-get upgrade -y && \
              apt-get install -y python3 python3-pip curl git net-tools iputils-ping nano openssh-server supervisor sshpass netcat

          RUN useradd -m -s /bin/bash admin && \
              echo "admin:admin" | chpasswd && \
              echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && \
              echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config && \
              mkdir -p /var/run/sshd

          COPY app /home/replika/app
          WORKDIR /home/replika/app
          RUN pip3 install --no-cache-dir -r requirements.txt || true

          COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

          CMD ["/usr/bin/supervisord"]
          EOF

      - name: üìÑ Criando supervisord.conf com l√≥gica de execu√ß√£o
        run: |
          cat <<EOF > dockerbuild/supervisord.conf
          [supervisord]
          nodaemon=true

          [program:step1_broker_init]
          command=/bin/bash -c "python3 message-broker-v3-clean.py && sleep 10 && pkill -f message-broker-v3-clean.py && sleep 10 && python3 dbfixv1.py && sleep 10 && python3 dbfixv2.py && sleep 10 && python3 message-broker-v3-clean.py"
          directory=/home/replika/app
          autostart=true
          autorestart=false
          startsecs=0
          priority=10
          stdout_logfile=/var/log/supervisor/step1.log
          stderr_logfile=/var/log/supervisor/step1.err

          [program:webdash]
          command=/bin/bash -c "sleep 120 && python3 webdash3-clean.py"
          directory=/home/replika/app
          autostart=true
          autorestart=true
          startsecs=0
          priority=20
          stdout_logfile=/var/log/supervisor/webdash.log
          stderr_logfile=/var/log/supervisor/webdash.err

          [program:geramensagem]
          command=/bin/bash -c "sleep 130 && python3 geramensagem-v3-massive-loop.py"
          directory=/home/replika/app
          autostart=true
          autorestart=true
          startsecs=0
          priority=30
          stdout_logfile=/var/log/supervisor/geramensagem.log
          stderr_logfile=/var/log/supervisor/geramensagem.err

          [program:coletamensagem]
          command=/bin/bash -c "sleep 140 && python3 coleta-mensagem-v3-batch-lote.py"
          directory=/home/replika/app
          autostart=true
          autorestart=true
          startsecs=0
          priority=40
          stdout_logfile=/var/log/supervisor/coletamensagem.log
          stderr_logfile=/var/log/supervisor/coletamensagem.err

          [program:sshd]
          command=/usr/sbin/sshd -D
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/sshd.log
          stderr_logfile=/var/log/supervisor/sshd.err
          EOF

      - name: üîë Login no Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u chaos4455 --password-stdin

      - name: üõ†Ô∏è Build da imagem Docker
        run: docker build -t $DOCKER_IMAGE_NAME -f dockerbuild/Dockerfile dockerbuild

      - name: ‚Üë Push para Docker Hub
        run: docker push $DOCKER_IMAGE_NAME

      - name: ‚ö° Subindo container
        run: |
          docker rm -f $DOCKER_CONTAINER_NAME || true
          docker run -d --name $DOCKER_CONTAINER_NAME \
            -p 8555:8555 -p 8881:8881 -p 8777:8777 -p 8333:8333 -p $EXTERNAL_SSH_PORT:22 \
            $DOCKER_IMAGE_NAME
          sleep 30

      - name: üëÅÔ∏è Verificando status do Supervisor
        run: docker exec $DOCKER_CONTAINER_NAME supervisorctl status || echo "‚ùå Supervisor falhou"

      - name: üì° Testando portas expostas
        run: |
          for porta in 8555 8881 8777 8333; do
            echo "Testando porta $porta..."
            nc -zv 127.0.0.1 $porta || echo "‚ùå Porta $porta n√£o est√° acess√≠vel"
          done

      - name: üîê Teste de conex√£o SSH
        run: |
          sleep 10
          sshpass -p 'admin' ssh -o StrictHostKeyChecking=no -p $EXTERNAL_SSH_PORT admin@localhost 'echo "‚úÖ SSH ok!"' || echo "‚ùå Falha no SSH"

      - name: üìã Logs do Supervisor
        run: docker exec $DOCKER_CONTAINER_NAME cat /var/log/supervisor/supervisord.log || echo "‚ö†Ô∏è N√£o foi poss√≠vel obter logs"

      - name: üìÑ Listagem de processos ativos
        run: docker exec $DOCKER_CONTAINER_NAME ps aux

      - name: üóë Cleanup final
        if: always()
        run: docker rm -f $DOCKER_CONTAINER_NAME || true
