name: 🔨 Build and Verify Docker Streamlit + SSH + Services App

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: chaos4455/message-broker-replika:latest
      DOCKER_CONTAINER_NAME: message-broker-replika
      EXTERNAL_SSH_PORT: 8222

    steps:
      - name: 📥 Clonando Repositório
        uses: actions/checkout@v3

      - name: 🔄 Garantindo Pull de Últimos Dados
        run: |
          git pull origin main || echo "⚠️ Pull falhou ou não era necessário."

      - name: 📁 Preparando diretório de build com exclusão
        shell: bash
        run: |
          echo "📁 Limpando diretório dockerbuild..."
          rm -rf dockerbuild
          mkdir -p dockerbuild/app
          shopt -s extglob
          cp -r !(dockerbuild|.git|.github) dockerbuild/app || true
          shopt -u extglob

      - name: 📜 Validando existência de arquivos essenciais
        run: |
          ls -lah dockerbuild/app
          [ -f dockerbuild/app/requirements.txt ] || (echo "❌ requirements.txt ausente!" && exit 1)

      - name: 📝 Gerando Dockerfile Dinamicamente
        run: |
          cat <<EOF > dockerbuild/Dockerfile
          FROM ubuntu:22.04

          RUN apt-get update && \
              apt-get upgrade -y && \
              apt-get install -y python3 python3-pip curl git net-tools iputils-ping nano openssh-server supervisor sshpass netcat && \
              mkdir -p /var/run/sshd

          # Criação de usuário admin com SSH
          RUN useradd -m -s /bin/bash admin && \
              echo "admin:admin" | chpasswd && \
              echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && \
              echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config

          # Copiando app
          COPY app /home/replika/app
          COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

          WORKDIR /home/replika/app
          RUN pip3 install --no-cache-dir -r requirements.txt

          CMD ["/usr/bin/supervisord"]
          EOF

      - name: ⚙️ Gerando supervisord.conf Dinamicamente
        run: |
          cat <<EOF > dockerbuild/supervisord.conf
          [supervisord]
          nodaemon=true

          [program:sshd]
          command=/usr/sbin/sshd -D
          autostart=true
          autorestart=true

          [program:message-broker]
          command=python3 /home/replika/app/message-broker-v3-clean.py
          directory=/home/replika/app
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/message-broker.log
          stderr_logfile=/var/log/supervisor/message-broker.err

          [program:webdash]
          command=python3 /home/replika/app/webdash3-clean.py
          directory=/home/replika/app
          autostart=true
          autorestart=true

          [program:geramensagem]
          command=python3 /home/replika/app/geramensagem-v3-massive-loop.py
          directory=/home/replika/app
          autostart=true
          autorestart=true

          [program:coleta]
          command=python3 /home/replika/app/coleta-mensagem-v3-batch-lote.py
          directory=/home/replika/app
          autostart=true
          autorestart=true
          EOF

      - name: 🔐 Login no Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u chaos4455 --password-stdin

      - name: 🛠️ Build da Imagem Docker
        run: docker build -t $DOCKER_IMAGE_NAME -f dockerbuild/Dockerfile dockerbuild

      - name: 🚀 Subindo Container
        run: |
          docker rm -f $DOCKER_CONTAINER_NAME || true
          docker run -d --name $DOCKER_CONTAINER_NAME \
            -p 8555:8555 \
            -p 8881:8881 \
            -p 8777:8777 \
            -p 8333:8333 \
            -p $EXTERNAL_SSH_PORT:22 \
            $DOCKER_IMAGE_NAME
          sleep 30

      - name: 🧠 Verificar Supervisor
        run: docker exec $DOCKER_CONTAINER_NAME supervisorctl status || echo "⚠️ Falha ao verificar status."

      - name: 📡 Testar portas abertas
        run: |
          declare -A portas=(
            ["Dashboard Web (8881)"]=8881
            ["Message Broker API (8777)"]=8777
            ["Dash Monitor (8333)"]=8333
          )
          for nome in "${!portas[@]}"; do
            porta=${portas[$nome]}
            echo "🔎 Verificando $nome na porta $porta..."
            nc -zv 127.0.0.1 $porta && echo "✅ Porta $porta OK" || echo "❌ Porta $porta falhou"
          done

      - name: 🔐 Testar SSH na porta 8222
        run: |
          sleep 10
          sshpass -p 'admin' ssh -o StrictHostKeyChecking=no -p $EXTERNAL_SSH_PORT admin@localhost 'echo "✅ SSH OK!"' || echo "❌ SSH falhou"

      - name: 🧾 Logs do Supervisor
        run: docker exec $DOCKER_CONTAINER_NAME cat /var/log/supervisor/supervisord.log || echo "⚠️ Falha ao obter logs"

      - name: 📦 Processos Ativos no Container
        run: docker exec $DOCKER_CONTAINER_NAME ps aux

      - name: 🧼 Cleanup (opcional)
        if: always()
        run: docker rm -f $DOCKER_CONTAINER_NAME || true
