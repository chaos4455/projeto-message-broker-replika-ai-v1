name: üöÄ Build & Deploy Docker Image

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: chaos4455/message-broker-replika
  VERSION_PREFIX: RC1-beta-v

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üß† Define nova vers√£o
        id: version
        run: |
          PREFIX="RC1-beta-v"
          git fetch --tags
          LAST_TAG=$(git tag --sort=-v:refname | grep "^$PREFIX" | head -n 1 || echo "${PREFIX}0000")
          NUMBER=$(echo $LAST_TAG | grep -oP '\d+$')
          NEXT=$(printf "%04d" $((10#$NUMBER + 1)))
          echo "version=${PREFIX}${NEXT}" >> $GITHUB_OUTPUT

      - name: üõ†Ô∏è Gera Dockerfile dinamicamente
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:22.04

          RUN apt-get update && apt-get upgrade -y && apt-get install -y \\
              python3 python3-pip gcc libpq-dev build-essential \\
              openssh-server sudo ufw nano vim htop iftop net-tools \\
              curl wget unzip iputils-ping libpam0g-dev libpam-modules \\
              && apt-get clean && rm -rf /var/lib/apt/lists/*

          RUN useradd -m -s /bin/bash admin && echo 'admin:admin' | chpasswd && echo 'admin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

          RUN mkdir /var/run/sshd

          RUN sed -i 's/^#\\?PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config && \\
              sed -i 's/^#\\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config && \\
              sed -i 's/^#\\?UsePAM.*/UsePAM yes/' /etc/ssh/sshd_config && \\
              sed -i 's/^#\\?PermitEmptyPasswords.*/PermitEmptyPasswords no/' /etc/ssh/sshd_config

          WORKDIR /app
          COPY requirements.txt .
          COPY message-broker-v3-clean.py .
          COPY webdash3-clean.py .
          COPY geramensagem-v3-massive-loop.py .
          COPY coleta-mensagem-v3-batch-lote.py .

          RUN pip3 install --no-cache-dir -r requirements.txt

          EXPOSE 22 8000 8080 8333 8777

          CMD service ssh start && \\
              (python3 message-broker-v3-clean.py &) && \\
              sleep 5 && (python3 webdash3-clean.py &) && \\
              sleep 5 && (python3 geramensagem-v3-massive-loop.py &) && \\
              sleep 5 && (python3 coleta-mensagem-v3-batch-lote.py &) && \\
              tail -f /dev/null
          EOF

      - name: üê≥ Login no DockerHub
        uses: docker/login-action@v2
        with:
          username: chaos4455
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üì¶ Build da imagem
        run: |
          docker build -t $IMAGE_NAME:${{ steps.version.outputs.version }} .

      - name: ‚òÅÔ∏è Push da imagem
        run: |
          docker push $IMAGE_NAME:${{ steps.version.outputs.version }}

      - name: üè∑Ô∏è Cria e envia tag Git
        env:
          GITHUB_TOKEN: ${{ secrets.MASTERTOKEN }}
        run: |
          git config --global user.name "Elias Andrade - Replika AI"
          git config --global user.email "chaos4455@users.noreply.github.com"
          git tag ${{ steps.version.outputs.version }}
          git push https://x-access-token:${{ secrets.MASTERTOKEN }}@github.com/${{ github.repository }} --tags
