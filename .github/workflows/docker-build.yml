name: 🚀 Build & Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v4

    - name: 🔐 Login no Docker Hub (via shell)
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u chaos4455 --password-stdin

    - name: 📝 Criar Dockerfile dinamicamente
      run: |
        cat <<'EOF' > Dockerfile
        FROM ubuntu:22.04

        RUN apt-get update && apt-get install -y \
            python3 python3-pip \
            gcc libpq-dev build-essential \
            openssh-server sudo ufw \
            nano vim htop iftop net-tools curl wget unzip iputils-ping \
            libpam0g-dev libpam-modules && \
            apt-get clean

        RUN useradd -m -s /bin/bash admin && echo 'admin:admin' | chpasswd && \
            echo 'admin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

        RUN mkdir /var/run/sshd

        RUN sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config && \
            sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config && \
            sed -i 's/^#\?UsePAM.*/UsePAM yes/' /etc/ssh/sshd_config && \
            sed -i 's/^#\?PermitEmptyPasswords.*/PermitEmptyPasswords no/' /etc/ssh/sshd_config

        RUN ufw allow 22 && \
            ufw allow 8000 && \
            ufw allow 8080 && \
            ufw allow 8333 && \
            ufw allow 8777 && \
            ufw allow OpenSSH && \
            ufw --force enable

        WORKDIR /app
        COPY requirements.txt .
        COPY message-broker-v3-clean.py .
        RUN pip3 install --no-cache-dir -r requirements.txt

        EXPOSE 22 8000 8080 8333 8777

        CMD service ssh start && python3 message-broker-v3-clean.py
        EOF

    - name: 🏗️ Build da imagem Docker
      run: docker build -t chaos4455/message-broker-v3:latest .

    - name: 🚀 Push para o Docker Hub
      run: docker push chaos4455/message-broker-v3:latest
