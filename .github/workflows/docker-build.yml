name: 🧪 Build, Deploy & Test Full Docker App with Supervisor, Streamlit, SSH & Services

on:
  push:
    branches:
      - main

jobs:
  build-and-verify:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: chaos4455/vectorial-profiler:latest

    steps:
      - name: 📦 Checkout do Código
        uses: actions/checkout@v3

      - name: 📁 Preparar Estrutura de Build
        run: |
          echo "📁 Preparando diretório temporário para build..."
          mkdir -p dockerbuild/app
          shopt -s extglob
          cp -r !(dockerbuild) dockerbuild/app
          cd dockerbuild

          echo "🔧 Gerando Dockerfile dinamicamente..."
          cat <<EOF > Dockerfile
          FROM ubuntu:22.04

          RUN apt-get update && \
              apt-get upgrade -y && \
              apt-get install -y python3 python3-pip curl git net-tools iputils-ping nano openssh-server supervisor && \
              pip3 install --no-cache-dir -r /home/replika/app/requirements.txt || true

          RUN useradd -m -s /bin/bash admin && \
              echo "admin:admin" | chpasswd && \
              echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && \
              echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config && \
              mkdir -p /var/run/sshd

          COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
          WORKDIR /home/replika/app
          CMD ["/usr/bin/supervisord"]
          EOF

          echo "🧾 Gerando supervisord.conf dinamicamente..."
          cat <<EOF > supervisord.conf
          [supervisord]
          nodaemon=true

          [program:sshd]
          command=/usr/sbin/sshd -D
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/sshd.log
          stderr_logfile=/var/log/supervisor/sshd.err.log

          [program:streamlit-dashboard]
          command=python3 /home/replika/app/streamlit-control-center-v1.py
          directory=/home/replika/app
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/streamlit.log
          stderr_logfile=/var/log/supervisor/streamlit.err.log

          [program:message-broker-master-api]
          command=python3 /home/replika/app/message-broker-v3-clean.py
          directory=/home/replika/app
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/broker.log
          stderr_logfile=/var/log/supervisor/broker.err.log

          [program:dash-monitor]
          command=python3 /home/replika/app/webdash3-clean.py
          directory=/home/replika/app
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/monitor.log
          stderr_logfile=/var/log/supervisor/monitor.err.log
          EOF

      - name: 🔒 Login no Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u chaos4455 --password-stdin

      - name: 🐳 Build da Imagem Docker
        run: |
          cd dockerbuild
          docker build -t $DOCKER_IMAGE_NAME .

      - name: 🚀 Subir Container com Múltiplas Portas
        run: |
          docker run -d --name vectorial-profiler \
            -p 8555:8555 \
            -p 8881:8881 \
            -p 8777:8777 \
            -p 8333:8333 \
            -p 8222:22 \
            $DOCKER_IMAGE_NAME
          sleep 20

      - name: 🧠 Verificar Serviços do Supervisor
        run: docker exec vectorial-profiler supervisorctl status

      - name: 🔍 Testar Abertura das Portas dos Serviços
        run: |
          portas=(8555 8881 8777 8333)
          for porta in "${portas[@]}"; do
            echo "🔍 Testando porta $porta..."
            for tentativa in {1..5}; do
              sleep 5
              if curl -s http://localhost:$porta | grep -iq "html\|streamlit\|api"; then
                echo "✅ Porta $porta está respondendo"
                break
              elif [ "$tentativa" -eq 5 ]; then
                echo "❌ Porta $porta não respondeu a tempo."
                docker logs vectorial-profiler || true
              fi
            done
          done

      - name: 🔐 Testar acesso SSH via porta 8222
        run: |
          sleep 10
          echo "📡 Testando conexão SSH na porta 8222 (login admin/admin)..."
          sshpass -p admin ssh -o StrictHostKeyChecking=no -p 8222 admin@localhost 'echo "✅ Login SSH bem-sucedido!"' || echo "❌ Falha no login SSH"

      - name: 📋 Listar Processos Ativos no Container
        run: docker exec vectorial-profiler ps aux

      - name: 🪵 Logs do Supervisor
        run: docker exec vectorial-profiler cat /var/log/supervisor/supervisord.log || echo "❌ Falha ao coletar logs"

      - name: 📄 Mostrar Todos os Logs Individuais
        run: |
          for log in sshd streamlit broker monitor; do
            echo "\n📄 Log de \$log:"
            docker exec vectorial-profiler cat /var/log/supervisor/\$log.log || true
          done

      - name: 🧼 Cleanup Final
        if: always()
        run: docker rm -f vectorial-profiler || true
