name: 🐳 Docker Build & Streamlit Check

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: chaos4455/replika-broker-image
  VERSION: RC1-beta-v0001
  GITHUB_TOKEN: ${{ secrets.MASTERTOKEN }}
  DOCKERHUB_USERNAME: chaos4455

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🧾 Create Dockerfile dynamically
        run: |
          cat <<'EOF' > Dockerfile
          FROM ubuntu:22.04
          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update && \
              apt-get upgrade -y && \
              apt-get install -y python3 python3-pip curl git net-tools iputils-ping nano openssh-server supervisor

          RUN useradd -m -s /bin/bash replika && \
              echo 'replika:replika' | chpasswd && \
              mkdir -p /home/replika/app /var/log/supervisor

          WORKDIR /home/replika/app

          ARG GITHUB_TOKEN
          RUN git clone https://${GITHUB_TOKEN}@github.com/chaos4455/projeto-message-broker-replika-ai-v1.git /home/replika/app

          RUN pip3 install --no-cache-dir -r /home/replika/app/requirements.txt

          COPY supervisord.conf /etc/supervisor/supervisord.conf

          CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/supervisord.conf"]
          EOF

      - name: 🧪 Create supervisord.conf
        run: |
          cat <<'EOF' > supervisord.conf
          [supervisord]
          nodaemon=true
          logfile=/var/log/supervisor/supervisord.log

          [program:streamlit-dashboard]
          command=python3 /home/replika/app/streamlit-control-center-v1.py
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/streamlit.log
          stderr_logfile=/var/log/supervisor/streamlit.err.log
          EOF

      - name: 🛠️ Build Docker Image
        run: |
          docker build --build-arg GITHUB_TOKEN=${{ env.GITHUB_TOKEN }} -t $IMAGE_NAME:$VERSION .

      - name: 🧪 Run Container Temporarily
        run: |
          docker run -d --rm -p 8555:8555 --name replika-test $IMAGE_NAME:$VERSION

      - name: 💤 Wait 15s for container to start
        run: sleep 15

      - name: 🔍 Check if Streamlit is running on port 8555
        run: |
          if curl -s http://localhost:8555 | grep -iq "streamlit"; then
            echo "✅ Streamlit está ativo na porta 8555"
          else
            echo "❌ Erro: Streamlit não subiu corretamente na porta 8555"
            docker logs replika-test || true
            exit 1
          fi

      - name: 🧹 Stop test container
        if: always()
        run: docker stop replika-test

      - name: 📤 Push Docker image to Docker Hub
        run: |
          docker push $IMAGE_NAME:$VERSION

      # - name: 🏷️ (Opcional) Criar tag da imagem
      #   run: |
      #     git tag $VERSION
      #     git push origin $VERSION
