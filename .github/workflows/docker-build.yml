name: 🔨 Build and Verify Docker Streamlit + SSH + Services App

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: chaos4455/message-broker-replika:latest
      DOCKER_CONTAINER_NAME: message-broker-replika
      EXTERNAL_SSH_PORT: 8222

    steps:
      - name: 📥 Clonando Repositório
        uses: actions/checkout@v3

      - name: 🔄 Verificando atualizações remotas
        run: |
          echo "🔍 Verificando atualizações no branch 'main'..."
          git fetch origin main
          if [ "$(git rev-parse HEAD)" != "$(git rev-parse origin/main)" ]; then
            echo "📥 Pulling últimas mudanças do repositório..."
            git pull origin main
          else
            echo "✅ Já está atualizado com o branch main."
          fi

      - name: 🗂️ Preparando diretório de build
        run: |
          echo "🧹 Limpando diretórios anteriores..."
          rm -rf dockerbuild
          mkdir -p dockerbuild/app
          shopt -s extglob
          cp -r !(dockerbuild|.git|.github) dockerbuild/app || true

      - name: 📜 Validando arquivos essenciais
        run: |
          ls -lah dockerbuild/app
          if [ ! -f dockerbuild/app/requirements.txt ]; then
            echo "❌ Arquivo requirements.txt não encontrado!"
            exit 1
          fi

      - name: 🧱 Criando Dockerfile dinâmico
        run: |
          cat <<EOF > dockerbuild/Dockerfile
          FROM ubuntu:22.04

          RUN apt-get update && apt-get upgrade -y && \
              apt-get install -y python3 python3-pip curl git net-tools iputils-ping nano openssh-server supervisor sshpass netcat

          RUN useradd -m -s /bin/bash admin && \
              echo "admin:admin" | chpasswd && \
              echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && \
              echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config && \
              mkdir -p /var/run/sshd

          WORKDIR /home/replika/app
          COPY app /home/replika/app
          RUN pip3 install --no-cache-dir -r requirements.txt

          COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

          CMD ["/usr/bin/supervisord"]
          EOF

      - name: ⚙️ Gerando supervisord.conf com lógica refinada
        run: |
          cat <<EOF > dockerbuild/supervisord.conf
          [supervisord]
          nodaemon=true

          [program:sshd]
          command=/usr/sbin/sshd -D
          autostart=true
          autorestart=true

          [program:broker-init]
          command=/bin/bash -c "python3 message-broker-v3-clean.py && sleep 10"
          directory=/home/replika/app
          autostart=true
          autorestart=false
          startsecs=0

          [program:dbfixv1]
          command=/bin/bash -c "sleep 15 && python3 dbfixv1.py"
          directory=/home/replika/app
          autostart=true
          autorestart=false

          [program:dbfixv2]
          command=/bin/bash -c "sleep 25 && python3 dbfixv2.py"
          directory=/home/replika/app
          autostart=true
          autorestart=false

          [program:broker-final]
          command=/bin/bash -c "sleep 35 && python3 message-broker-v3-clean.py"
          directory=/home/replika/app
          autostart=true
          autorestart=true

          [program:webdash]
          command=/bin/bash -c "sleep 55 && python3 webdash3-clean.py"
          directory=/home/replika/app
          autostart=true
          autorestart=true

          [program:gerador]
          command=/bin/bash -c "sleep 65 && python3 geramensagem-v3-massive-loop.py"
          directory=/home/replika/app
          autostart=true
          autorestart=true

          [program:coletor]
          command=/bin/bash -c "sleep 75 && python3 coleta-mensagem-v3-batch-lote.py"
          directory=/home/replika/app
          autostart=true
          autorestart=true
          EOF

      - name: 🔐 Login no Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u chaos4455 --password-stdin

      - name: 🛠️ Build da Imagem Docker
        run: docker build -t $DOCKER_IMAGE_NAME -f dockerbuild/Dockerfile dockerbuild

      - name: ⏫ Push para Docker Hub
        run: docker push $DOCKER_IMAGE_NAME

      - name: 🚀 Subindo Container
        run: |
          docker rm -f $DOCKER_CONTAINER_NAME || true
          docker run -d --name $DOCKER_CONTAINER_NAME \
            -p 8555:8555 \
            -p 8881:8881 \
            -p 8777:8777 \
            -p 8333:8333 \
            -p $EXTERNAL_SSH_PORT:22 \
            $DOCKER_IMAGE_NAME
          sleep 30

      - name: 📡 Verificar status dos serviços
        run: docker exec $DOCKER_CONTAINER_NAME supervisorctl status || echo "❌ Erro ao verificar status do supervisor."

      - name: 📶 Verificar portas expostas
        run: |
          for porta in 8555 8881 8777 8333; do
            echo "🔍 Testando porta $porta..."
            nc -zv 127.0.0.1 $porta && echo "✅ Porta $porta OK!" || echo "❌ Porta $porta falhou."
          done

      - name: 🔐 Testar Acesso SSH
        run: |
          echo "🔐 Testando SSH..."
          sshpass -p 'admin' ssh -o StrictHostKeyChecking=no -p $EXTERNAL_SSH_PORT admin@localhost 'echo "✅ SSH OK!"' || echo "❌ SSH Falhou"

      - name: 📜 Logs do Supervisor
        run: docker exec $DOCKER_CONTAINER_NAME cat /var/log/supervisor/supervisord.log || echo "⚠️ Logs indisponíveis"

      - name: 📋 Processos Ativos
        run: docker exec $DOCKER_CONTAINER_NAME ps aux

      - name: 🧹 Cleanup Final (opcional)
        if: always()
        run: docker rm -f $DOCKER_CONTAINER_NAME || true
