name: üî® Build and Verify Docker Streamlit + SSH + Services App

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: chaos4455/message-broker-replika:latest
      DOCKER_CONTAINER_NAME: message-broker-replika
      EXTERNAL_SSH_PORT: 8222

    steps:
      - name: üìÖ Clonando Reposit√≥rio
        uses: actions/checkout@v3

      - name: üîÑ Garantindo Pull de √öltimos Dados
        run: git pull origin main || echo "‚ö†Ô∏è Aviso: Falha ao executar git pull."

      - name: üìÅ Preparando diret√≥rio tempor√°rio para build
        run: |
          rm -rf dockerbuild
          mkdir -p dockerbuild/app
          shopt -s extglob
          cp -r !(dockerbuild|.git|.github) dockerbuild/app || true

      - name: üìÑ Validando arquivos essenciais
        run: |
          ls -lah dockerbuild/app
          if [ ! -f dockerbuild/app/requirements.txt ]; then
            echo "‚ùå Arquivo requirements.txt ausente!"
            exit 1
          fi

      - name: üìù Gerando Dockerfile Dinamicamente
        run: |
          cat <<EOF > dockerbuild/Dockerfile
          FROM ubuntu:22.04

          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update && apt-get install -y \
              python3 python3-pip \
              curl git net-tools iputils-ping \
              nano openssh-server supervisor sshpass netcat && \
              apt-get clean

          RUN useradd -ms /bin/bash replika && \
              echo 'admin:admin' | chpasswd && \
              echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && \
              echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config && \
              mkdir -p /var/run/sshd

          COPY app /home/replika/app
          WORKDIR /home/replika/app
          RUN pip3 install --no-cache-dir -r requirements.txt

          COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

          CMD ["/usr/bin/supervisord"]
          EOF

      - name: ‚öñÔ∏è Gerando supervisord.conf Dinamicamente
        run: |
          cat <<EOF > dockerbuild/supervisord.conf
          [supervisord]
          nodaemon=true

          [program:sshd]
          command=/usr/sbin/sshd -D
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/sshd.log
          stderr_logfile=/var/log/supervisor/sshd.err.log

          [program:init-broker]
          command=/bin/bash -c "python3 message-broker-v3-clean.py && sleep 10 && pkill -f message-broker-v3-clean.py && sleep 2 && python3 dbfixv1.py && sleep 10 && python3 dbfixv2.py && sleep 10 && python3 message-broker-v3-clean.py && sleep 120 && python3 webdash3-clean.py && sleep 10 && python3 geramensagem-v3-massive-loop.py && sleep 10 && python3 coleta-mensagem-v3-batch-lote.py"
          directory=/home/replika/app
          autostart=true
          autorestart=false
          startsecs=0
          stdout_logfile=/var/log/supervisor/init-broker.log
          stderr_logfile=/var/log/supervisor/init-broker.err.log

          [program:geramensagem]
          command=python3 /home/replika/app/geramensagem-v3-massive-loop.py
          directory=/home/replika/app
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/geramensagem.log
          stderr_logfile=/var/log/supervisor/geramensagem.err.log

          [program:coletamensagem]
          command=python3 /home/replika/app/coleta-mensagem-v3-batch-lote.py
          directory=/home/replika/app
          autostart=true
          autorestart=true
          stdout_logfile=/var/log/supervisor/coletamensagem.log
          stderr_logfile=/var/log/supervisor/coletamensagem.err.log
          EOF

      - name: üîê Login no Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u chaos4455 --password-stdin

      - name: üõ†Ô∏è Build da Imagem Docker
        run: docker build -t $DOCKER_IMAGE_NAME -f dockerbuild/Dockerfile dockerbuild

      - name: ‚¨ÜÔ∏è Push para o Docker Hub
        run: docker push $DOCKER_IMAGE_NAME

      - name: üöÄ Subindo Container
        run: |
          docker rm -f $DOCKER_CONTAINER_NAME || true
          docker run -d --name $DOCKER_CONTAINER_NAME \
            -p 8555:8555 \
            -p 8881:8881 \
            -p 8777:8777 \
            -p 8333:8333 \
            -p $EXTERNAL_SSH_PORT:22 \
            $DOCKER_IMAGE_NAME
          sleep 30

      - name: ü´ù Verificando status do Supervisor
        run: docker exec $DOCKER_CONTAINER_NAME supervisorctl status || echo "‚ùå Falha ao coletar status."

      - name: üì° Testar portas expostas
        run: |
          for PORT in 8555 8881 8777 8333; do
            echo üîé Testando porta $PORT...
            nc -zv 127.0.0.1 $PORT && echo "‚úÖ Porta $PORT OK" || echo "‚ùå Falha na porta $PORT"
          done

      - name: üîê Testar SSH
        run: |
          echo "‚è≥ Aguardando SSH..."
          sleep 10
          sshpass -p 'admin' ssh -o StrictHostKeyChecking=no -p $EXTERNAL_SSH_PORT admin@localhost 'echo "‚úÖ SSH OK"' || echo "‚ùå SSH falhou"

      - name: üìÇ Logs do Supervisor
        run: docker exec $DOCKER_CONTAINER_NAME cat /var/log/supervisor/supervisord.log || echo "‚ö†Ô∏è Falha ao obter logs."

      - name: üìä Processos ativos no container
        run: docker exec $DOCKER_CONTAINER_NAME ps aux

      - name: üßπ Cleanup (opcional)
        if: always()
        run: docker rm -f $DOCKER_CONTAINER_NAME || true
