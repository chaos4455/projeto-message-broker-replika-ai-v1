name: üöÄ Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: chaos4455/message-broker-replika
      VERSION: latest
      DOCKERHUB_USERNAME: chaos4455
      # Certifique-se de que esses secrets est√£o configurados
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.MASTERTOKEN }}

    steps:
      - name: üß± Checkout Repository
        uses: actions/checkout@v3

      - name: üßæ Create Dockerfile dynamically
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:22.04
          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update && \
              apt-get upgrade -y && \
              apt-get install -y python3 python3-pip curl git net-tools iputils-ping nano openssh-server && \
              useradd -m -s /bin/bash replika && \
              echo 'replika:replika' | chpasswd && \
              mkdir -p /home/replika/app

          WORKDIR /home/replika/app
          COPY . .

          RUN pip3 install --no-cache-dir requests

          CMD bash -c "\
            python3 message-broker-v3-clean.py & \
            sleep 5 && \
            python3 webdash3-clean.py & \
            sleep 5 && \
            python3 geramensagem-v3-massive-loop.py & \
            sleep 5 && \
            python3 coleta-mensagem-v3-batch-lote.py && \
            tail -f /dev/null"
          EOF

      - name: üê≥ Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: üõ†Ô∏è Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:$VERSION .

      - name: üì§ Push Docker Image
        run: |
          docker push $IMAGE_NAME:$VERSION

      # Etapa opcional de teste local
      - name: üß™ Run container and test ports
        run: |
          docker run -d -p 8333:8333 -p 8777:8777 --name replika-test $IMAGE_NAME:$VERSION
          echo "‚è≥ Esperando o container iniciar..."
          sleep 10
          echo "üîç Testando se as portas est√£o ativas..."
          ss -tuln | grep ':8333' || echo '‚ö†Ô∏è Porta 8333 n√£o ativa'
          ss -tuln | grep ':8777' || echo '‚ö†Ô∏è Porta 8777 n√£o ativa'
          echo "‚úÖ Container iniciado. Logs recentes:"
          docker logs replika-test --tail 20
