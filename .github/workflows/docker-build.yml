name: ‚ú® Build and Deploy Broker + Dashboard Only

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: chaos4455/message-broker-replika
      VERSION: latest
      DOCKERHUB_USERNAME: chaos4455

    steps:
      - name: üß± Checkout Repository
        uses: actions/checkout@v3

      - name: üìú Create Dockerfile dynamically
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:22.04
          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update && \
              apt-get upgrade -y && \
              apt-get install -y python3 python3-pip curl git net-tools iputils-ping nano openssh-server && \
              pip3 install --no-cache-dir \
                fastapi \
                uvicorn[standard] \
                tortoise-orm \
                aiosqlite \
                pydantic[email] \
                python-jose[cryptography] \
                colorama \
                cryptography \
                psutil \
                Werkzeug \
                slowapi \
                strawberry-graphql[fastapi] \
                Jinja2 \
                ipaddress \
                passlib \
                requests \
                schedule \
                flask

          RUN useradd -m -s /bin/bash replika && \
              echo 'replika:replika' | chpasswd && \
              mkdir -p /home/replika/app

          WORKDIR /home/replika/app
          COPY . .

          CMD bash -c "\
            echo '[1/5] Iniciando Message Broker para gerar o banco...' && \\
            python3 message-broker-v3-clean.py & \\
            sleep 5 && \\
            echo '[2/5] Finalizando broker para rodar DB fixes...' && \\
            pkill -f message-broker-v3-clean.py && \\
            sleep 2 && \\
            echo '[3/5] Executando dbfixv1.py e dbfixv2.py...' && \\
            python3 dbfixv1.py && \\
            python3 dbfixv2.py && \\
            echo '[4/5] Reiniciando o Message Broker...' && \\
            python3 message-broker-v3-clean.py & \\
            sleep 5 && \\
            echo '[5/5] Iniciando Web Dashboard...' && \\
            python3 webdash3-clean.py && \\
            tail -f /dev/null"
          EOF

      - name: üê≥ Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üõ†Ô∏è Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:$VERSION .

      - name: üì§ Push Docker Image
        run: |
          docker push $IMAGE_NAME:$VERSION

      - name: üöÄ Deploy & Test Ports
        run: |
          docker run -d --name replika_test_container -p 8333:8333 -p 8777:8777 $IMAGE_NAME:$VERSION
          echo '‚è≥ Aguardando 10s para inicializa√ß√£o...'
          sleep 10
          echo 'üîç Testando se as portas est√£o respondendo...'
          nc -zv localhost 8333 || echo '‚ö†Ô∏è Porta 8333 n√£o est√° respondendo.'
          nc -zv localhost 8777 || echo '‚ö†Ô∏è Porta 8777 n√£o est√° respondendo.'
          echo '‚úÖ Teste de portas finalizado.'
