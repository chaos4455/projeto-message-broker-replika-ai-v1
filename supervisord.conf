# supervisord.conf
# Configuration file for Supervisor process manager
# Place this file in the root of your project, alongside the Dockerfile.
# It will be copied into the Docker image during the build process.

[supervisord]
nodaemon=true           ; Run Supervisor in the foreground (required for Docker containers)
logfile=/var/log/supervisor/supervisord.log ; Main log file location
pidfile=/var/run/supervisord.pid ; PID file location
loglevel=info           ; Set log level (debug, info, warn, error, critical)

[unix_http_server]
file=/var/run/supervisor.sock   ; Path to the supervisor socket file for supervisorctl
chmod=0700                 ; Set permissions for the socket file

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface ; Enable RPC interface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; How supervisorctl connects to supervisord

# ----------------------------------------
# Program Definitions
# ----------------------------------------
# Each [program:x] section defines a process to be managed by Supervisor.
# The order of execution is controlled here by the 'sleep' commands and 'priority'.

[program:sshd]
command=/usr/sbin/sshd -D
autostart=true
autorestart=true
priority=10                     ; Start SSH daemon first
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)_err.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3

[program:broker-init]
command=/bin/bash -c "python3 message-broker-v3-clean.py && sleep 10"
directory=/home/replika/app     ; Working directory for the script
autostart=true
autorestart=false               ; Run this initialization script only once
startsecs=0                     ; Don't wait for this program to be fully "started"
priority=100
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)_err.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3

[program:dbfixv1]
command=/bin/bash -c "sleep 15 && python3 dbfixv1.py"
directory=/home/replika/app
autostart=true
autorestart=false               ; Run this fix script only once
priority=200
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)_err.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3

[program:dbfixv2]
command=/bin/bash -c "sleep 25 && python3 dbfixv2.py"
directory=/home/replika/app
autostart=true
autorestart=false               ; Run this fix script only once
priority=300
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)_err.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=3

[program:broker-final]
command=/bin/bash -c "sleep 35 && python3 message-broker-v3-clean.py"
directory=/home/replika/app
autostart=true
autorestart=true                ; Restart the main broker if it crashes
priority=400
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)_err.log
stdout_logfile_maxbytes=50MB    ; Allow larger logs for main components
stdout_logfile_backups=5

[program:webdash]
command=/bin/bash -c "sleep 55 && python3 webdash3-clean.py"
directory=/home/replika/app
autostart=true
autorestart=true                ; Restart the web dashboard if it crashes
priority=500
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)_err.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5

[program:gerador]
command=/bin/bash -c "sleep 65 && python3 geramensagem-v3-massive-loop.py"
directory=/home/replika/app
autostart=true
autorestart=true                ; Restart the message generator if it crashes
priority=600
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)_err.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5

[program:coletor]
command=/bin/bash -c "sleep 75 && python3 coleta-mensagem-v3-batch-lote.py"
directory=/home/replika/app
autostart=true
autorestart=true                ; Restart the message collector if it crashes
priority=700
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)_err.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=5
